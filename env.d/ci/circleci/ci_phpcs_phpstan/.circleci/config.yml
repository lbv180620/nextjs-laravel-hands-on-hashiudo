version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
        environment:
          REVIEWDOG_VERSION: "0.9.11"
      - image: circleci/postgres:11.6-alpine
        # - image: circleci/postgres:11.14-bullseye
        environment:
          POSTGRES_DB: laravel_ci
          POSTGRES_USER: phper
          POSTGRES_PASSWORD: secret
    environment:
      APP_ENV: testing
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: laravel_ci
      DB_USERNAME: phper
      DB_PASSWORD: secret
    working_directory: ~/laravel-ci-3/backend
    steps:
      - checkout:
          path: ~/laravel-ci-3
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "composer.lock"}}
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock"}}
          paths:
            - vendor
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: |
            if [ ! -d node_modules ]; then
              yarn install --frozen-lockfile
            fi
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: yarn run dev
      - run:
          name: get ready for postgres
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo apt-get update
            sudo apt-get install libpq-dev
            sudo docker-php-ext-install pdo_pgsql
            dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: lint
          command: ./vendor/bin/phpcs --warning-severity=0 --standard=phpcs.xml --report=code --report-width=120 ./app
      - run:
          name: analyse
          command: ./vendor/bin/phpstan analyse
      - run:
          name: php test
          command: ./vendor/bin/phpunit
